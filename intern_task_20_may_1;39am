{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled3.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyNZvefnxYFmuuPY4E7uRlLQ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "47908c6ba5214994ba4b52d53fbd08dc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_44c65a69248d4dee902af7fde47d2bd1",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_ea843fa06a764c79a31ef6bdce041e5c",
              "IPY_MODEL_a078f16bd2204c77b3ccff728bc22345",
              "IPY_MODEL_f67d4fc62e2b43e284d172d5a89fdebf"
            ]
          }
        },
        "44c65a69248d4dee902af7fde47d2bd1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ea843fa06a764c79a31ef6bdce041e5c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_51f3e9f887ec42378133690816b9bd1a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "Summarize dataset: ",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a2f616a17e7a4ba5862d28a6c8879b75"
          }
        },
        "a078f16bd2204c77b3ccff728bc22345": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_a89bef5e96f84aceb91c61acaa4127c1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 17,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 17,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5cbb34f8abb44e54a2b0b833cf959d5f"
          }
        },
        "f67d4fc62e2b43e284d172d5a89fdebf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_364cbb6361cd470aa0414af3da8a0c36",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 19/? [00:03&lt;00:00,  4.52it/s, Completed]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2933dfa285fd42369e91c0ee946e865a"
          }
        },
        "51f3e9f887ec42378133690816b9bd1a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a2f616a17e7a4ba5862d28a6c8879b75": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a89bef5e96f84aceb91c61acaa4127c1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5cbb34f8abb44e54a2b0b833cf959d5f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "364cbb6361cd470aa0414af3da8a0c36": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2933dfa285fd42369e91c0ee946e865a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "350ecbaf58e84d7e9aac27e6f0131863": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_6813de3ea8d64b51a3c7f9368fdce414",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_ad4ab74bb2944ee99a97329d443bf2a9",
              "IPY_MODEL_5e741e4a6fe746a5a8852ec07f2d1dbe",
              "IPY_MODEL_b9772f2f657c4d2d83bdf862b3a40dfb"
            ]
          }
        },
        "6813de3ea8d64b51a3c7f9368fdce414": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ad4ab74bb2944ee99a97329d443bf2a9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_0b282155591f42528095e349ee3e4cd4",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "Generate report structure: 100%",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_75ea881af381458f8d9cf29a16366c33"
          }
        },
        "5e741e4a6fe746a5a8852ec07f2d1dbe": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_3b16f897b9314a798874582918335642",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8428ce8c08fc47b7b6e017dfde799ddc"
          }
        },
        "b9772f2f657c4d2d83bdf862b3a40dfb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_59ebc0a574fa4063a4bb6e29f8f1412e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1/1 [00:01&lt;00:00,  1.85s/it]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d500f29aa2004b428e24ae14e4be5ee6"
          }
        },
        "0b282155591f42528095e349ee3e4cd4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "75ea881af381458f8d9cf29a16366c33": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3b16f897b9314a798874582918335642": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8428ce8c08fc47b7b6e017dfde799ddc": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "59ebc0a574fa4063a4bb6e29f8f1412e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d500f29aa2004b428e24ae14e4be5ee6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b4908c44edee460db701748f026c7649": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_36a1cb0201b145abba30b8902b9cf0db",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_4a9a240162cf4a608b7e20ceeef4a75f",
              "IPY_MODEL_b6c602c670624babb9f06e588a7b5bdf",
              "IPY_MODEL_f934835185d14abfa35296b6908858bb"
            ]
          }
        },
        "36a1cb0201b145abba30b8902b9cf0db": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4a9a240162cf4a608b7e20ceeef4a75f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_261ecf2a464b427685ce7ead331e9c8c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "Render HTML: 100%",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_12af6959ca8e4082a79bacc3975897c5"
          }
        },
        "b6c602c670624babb9f06e588a7b5bdf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_4dc76bfdf4c24c5f8e4ea50d111081e9",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4f3c0391ac2e4ea89674b8c7e473d63f"
          }
        },
        "f934835185d14abfa35296b6908858bb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_e5cf14f64b2f4f6e946743d55eb82ec2",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1/1 [00:00&lt;00:00,  3.02it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_93b6838738464d5bae1857dcae135baa"
          }
        },
        "261ecf2a464b427685ce7ead331e9c8c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "12af6959ca8e4082a79bacc3975897c5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4dc76bfdf4c24c5f8e4ea50d111081e9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4f3c0391ac2e4ea89674b8c7e473d63f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e5cf14f64b2f4f6e946743d55eb82ec2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "93b6838738464d5bae1857dcae135baa": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6976049dd75e491f9407e4d5a679ae5a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_ea13e3425ee148b4b0c308739c8081a1",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_313d641e75d44903b9d8705129aa0202",
              "IPY_MODEL_119435d380b24039a4c731432d0b182e",
              "IPY_MODEL_4dabc298561d4dc590f467605e8e5852"
            ]
          }
        },
        "ea13e3425ee148b4b0c308739c8081a1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "313d641e75d44903b9d8705129aa0202": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_97ac3f02e97743dd808e8009cd49ad2d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "Export report to file: 100%",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3cdf8476abfa459aafa05fc17fee3bf6"
          }
        },
        "119435d380b24039a4c731432d0b182e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_521419bc9ccf4f699403765615f75bfb",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a105f703576a4fa699676b5c488b5829"
          }
        },
        "4dabc298561d4dc590f467605e8e5852": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_59a6a941f7d8442583578a156c6a4cfb",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1/1 [00:00&lt;00:00, 18.52it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0749f5bf8a4b473583bafd7154cc110e"
          }
        },
        "97ac3f02e97743dd808e8009cd49ad2d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3cdf8476abfa459aafa05fc17fee3bf6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "521419bc9ccf4f699403765615f75bfb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a105f703576a4fa699676b5c488b5829": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "59a6a941f7d8442583578a156c6a4cfb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0749f5bf8a4b473583bafd7154cc110e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/prakanshurockss/Colab/blob/main/intern_task_20_may_1%3B39am\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5I0JvpyECNRe"
      },
      "source": [
        "!pip install pandas-profiling==2.7.1 "
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nohzJJqPRqYk"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas_profiling\n",
        "from pandas_profiling import ProfileReport"
      ],
      "execution_count": 52,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AwL85FPURtgm"
      },
      "source": [
        "features=pd.read_csv('training_data.csv')\n",
        "features_test=pd.read_csv('test_data.csv')"
      ],
      "execution_count": 53,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jEjyRgQJSVRm",
        "outputId": "92efb85d-0930-41f0-efe7-cf467cdd806f"
      },
      "source": [
        "print(features)"
      ],
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "      patient_id standard_lab_parameter_name  ...  gender 920000\n",
            "0              7                    Chloride  ...    male    NaN\n",
            "1             12                    Chloride  ...    male    NaN\n",
            "2             23                    Chloride  ...    male    NaN\n",
            "3             30                    Chloride  ...    male    NaN\n",
            "4             46                    Chloride  ...    male    NaN\n",
            "...          ...                         ...  ...     ...    ...\n",
            "9981        9992                         WBC  ...    male    NaN\n",
            "9982        9993                         WBC  ...    male    NaN\n",
            "9983        9995                         WBC  ...    male    NaN\n",
            "9984        9996                         WBC  ...    male    NaN\n",
            "9985        9998                         WBC  ...    male    NaN\n",
            "\n",
            "[9986 rows x 10 columns]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fy1o4IMcYCB8"
      },
      "source": [
        "features=features.drop(['patient_id','created_at','reference_high', 'reference_low','gender'],axis=1)\n"
      ],
      "execution_count": 55,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "chmVikUTd-oz"
      },
      "source": [
        "features_test=features_test.drop(['unit','patient_id','created_at','reference_high', 'reference_low','Unnamed: 0'],axis=1)"
      ],
      "execution_count": 56,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 514
        },
        "id": "cz7floe1Xpwn",
        "outputId": "7db2b8d4-dbf1-42f8-d36f-1bad7f8a3ccf"
      },
      "source": [
        "features.head(15)"
      ],
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>standard_lab_parameter_name</th>\n",
              "      <th>parameter_value</th>\n",
              "      <th>unit</th>\n",
              "      <th>age_group</th>\n",
              "      <th>920000</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>105.3</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>107.0</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>106.5</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>old</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>98.0</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>101.9</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>old</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>104.3</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>104.0</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>101.0</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>103.0</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>104.5</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>old</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>102.0</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>99.0</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>103.0</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>105.0</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>101.2</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   standard_lab_parameter_name  parameter_value    unit age_group  920000\n",
              "0                     Chloride            105.3  mmol/l     adult     NaN\n",
              "1                     Chloride            107.0  mmol/l     adult     NaN\n",
              "2                     Chloride            106.5  mmol/l       old     NaN\n",
              "3                     Chloride             98.0  mmol/l     adult     NaN\n",
              "4                     Chloride            101.9  mmol/l       old     NaN\n",
              "5                     Chloride            104.3  mmol/l     adult     NaN\n",
              "6                     Chloride            104.0  mmol/l     adult     NaN\n",
              "7                     Chloride            101.0  mmol/l     adult     NaN\n",
              "8                     Chloride            103.0  mmol/l     adult     NaN\n",
              "9                     Chloride            104.5  mmol/l       old     NaN\n",
              "10                    Chloride            102.0  mmol/l     adult     NaN\n",
              "11                    Chloride             99.0  mmol/l     adult     NaN\n",
              "12                    Chloride            103.0  mmol/l     adult     NaN\n",
              "13                    Chloride            105.0  mmol/l     adult     NaN\n",
              "14                    Chloride            101.2  mmol/l     adult     NaN"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "H8e5OonbZhBI"
      },
      "source": [
        "features=features[features.standard_lab_parameter_name.str.contains('Chloride',case=False)]\n",
        "features_test=features_test[features_test.standard_lab_parameter_name.str.contains('Chloride',case=False)]"
      ],
      "execution_count": 58,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 514
        },
        "id": "8ZOWHihcepkH",
        "outputId": "a18927de-226d-4711-dd54-6b5b9d3c264c"
      },
      "source": [
        "features_test.head(15)"
      ],
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>standard_lab_parameter_name</th>\n",
              "      <th>parameter_value</th>\n",
              "      <th>age_group</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>98.0</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>108.0</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>108.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>99.0</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>98.0</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>96.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>100.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>103.0</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>107.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>99.0</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>106.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>89</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>99.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>101.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>102.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>107.0</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    standard_lab_parameter_name  parameter_value age_group\n",
              "11                     Chloride             98.0       old\n",
              "20                     Chloride            108.0       old\n",
              "25                     Chloride            108.0     adult\n",
              "30                     Chloride             99.0       old\n",
              "36                     Chloride             98.0       old\n",
              "45                     Chloride             96.0     adult\n",
              "52                     Chloride            100.0     adult\n",
              "59                     Chloride            103.0       old\n",
              "65                     Chloride            107.0     adult\n",
              "69                     Chloride             99.0       old\n",
              "75                     Chloride            106.0     adult\n",
              "89                     Chloride             99.0     adult\n",
              "95                     Chloride            101.0     adult\n",
              "100                    Chloride            102.0     adult\n",
              "115                    Chloride            107.0       old"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "id": "iyZjARIJdpCw",
        "outputId": "da68e4db-5ed6-47fb-e71f-76958982c902"
      },
      "source": [
        "features.head(10000)"
      ],
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>standard_lab_parameter_name</th>\n",
              "      <th>parameter_value</th>\n",
              "      <th>unit</th>\n",
              "      <th>age_group</th>\n",
              "      <th>920000</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>105.3</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>107.0</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>106.5</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>old</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>98.0</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>101.9</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>old</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1177</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>100.0</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1178</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>103.0</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1179</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>102.0</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1180</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>101.0</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1181</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>103.8</td>\n",
              "      <td>mmol/l</td>\n",
              "      <td>adult</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1182 rows × 5 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     standard_lab_parameter_name  parameter_value    unit age_group  920000\n",
              "0                       Chloride            105.3  mmol/l     adult     NaN\n",
              "1                       Chloride            107.0  mmol/l     adult     NaN\n",
              "2                       Chloride            106.5  mmol/l       old     NaN\n",
              "3                       Chloride             98.0  mmol/l     adult     NaN\n",
              "4                       Chloride            101.9  mmol/l       old     NaN\n",
              "...                          ...              ...     ...       ...     ...\n",
              "1177                    Chloride            100.0  mmol/l     adult     NaN\n",
              "1178                    Chloride            103.0  mmol/l     adult     NaN\n",
              "1179                    Chloride            102.0  mmol/l     adult     NaN\n",
              "1180                    Chloride            101.0  mmol/l     adult     NaN\n",
              "1181                    Chloride            103.8  mmol/l     adult     NaN\n",
              "\n",
              "[1182 rows x 5 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qPKRXQYCJDI7"
      },
      "source": [
        "features.parameter_value[features.parameter_value == 0.67] =103\n",
        "features_test.parameter_value[features_test.parameter_value == 0.67] =103\n",
        "\n"
      ],
      "execution_count": 61,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 145,
          "referenced_widgets": [
            "47908c6ba5214994ba4b52d53fbd08dc",
            "44c65a69248d4dee902af7fde47d2bd1",
            "ea843fa06a764c79a31ef6bdce041e5c",
            "a078f16bd2204c77b3ccff728bc22345",
            "f67d4fc62e2b43e284d172d5a89fdebf",
            "51f3e9f887ec42378133690816b9bd1a",
            "a2f616a17e7a4ba5862d28a6c8879b75",
            "a89bef5e96f84aceb91c61acaa4127c1",
            "5cbb34f8abb44e54a2b0b833cf959d5f",
            "364cbb6361cd470aa0414af3da8a0c36",
            "2933dfa285fd42369e91c0ee946e865a",
            "350ecbaf58e84d7e9aac27e6f0131863",
            "6813de3ea8d64b51a3c7f9368fdce414",
            "ad4ab74bb2944ee99a97329d443bf2a9",
            "5e741e4a6fe746a5a8852ec07f2d1dbe",
            "b9772f2f657c4d2d83bdf862b3a40dfb",
            "0b282155591f42528095e349ee3e4cd4",
            "75ea881af381458f8d9cf29a16366c33",
            "3b16f897b9314a798874582918335642",
            "8428ce8c08fc47b7b6e017dfde799ddc",
            "59ebc0a574fa4063a4bb6e29f8f1412e",
            "d500f29aa2004b428e24ae14e4be5ee6",
            "b4908c44edee460db701748f026c7649",
            "36a1cb0201b145abba30b8902b9cf0db",
            "4a9a240162cf4a608b7e20ceeef4a75f",
            "b6c602c670624babb9f06e588a7b5bdf",
            "f934835185d14abfa35296b6908858bb",
            "261ecf2a464b427685ce7ead331e9c8c",
            "12af6959ca8e4082a79bacc3975897c5",
            "4dc76bfdf4c24c5f8e4ea50d111081e9",
            "4f3c0391ac2e4ea89674b8c7e473d63f",
            "e5cf14f64b2f4f6e946743d55eb82ec2",
            "93b6838738464d5bae1857dcae135baa",
            "6976049dd75e491f9407e4d5a679ae5a",
            "ea13e3425ee148b4b0c308739c8081a1",
            "313d641e75d44903b9d8705129aa0202",
            "119435d380b24039a4c731432d0b182e",
            "4dabc298561d4dc590f467605e8e5852",
            "97ac3f02e97743dd808e8009cd49ad2d",
            "3cdf8476abfa459aafa05fc17fee3bf6",
            "521419bc9ccf4f699403765615f75bfb",
            "a105f703576a4fa699676b5c488b5829",
            "59a6a941f7d8442583578a156c6a4cfb",
            "0749f5bf8a4b473583bafd7154cc110e"
          ]
        },
        "id": "uQ_KpLqaCVKN",
        "outputId": "0cf6dce2-8aac-4a4d-8078-c05dc222a7fa"
      },
      "source": [
        "#generate profile report\n",
        "profile= ProfileReport(features)\n",
        "profile.to_file(output_file=\"chloride.html\")"
      ],
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "47908c6ba5214994ba4b52d53fbd08dc",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "Summarize dataset:   0%|          | 0/17 [00:00<?, ?it/s]"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "350ecbaf58e84d7e9aac27e6f0131863",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "Generate report structure:   0%|          | 0/1 [00:00<?, ?it/s]"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "b4908c44edee460db701748f026c7649",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "Render HTML:   0%|          | 0/1 [00:00<?, ?it/s]"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "6976049dd75e491f9407e4d5a679ae5a",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "Export report to file:   0%|          | 0/1 [00:00<?, ?it/s]"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "d1sOjeOcwgy5",
        "outputId": "5aeb3cc3-b71a-4461-cc3c-102c61c86141"
      },
      "source": [
        "mn=np.mean(features.parameter_value)\n",
        "med=np.median(features.parameter_value)\n",
        "print(mn)\n",
        "print(med)"
      ],
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "111.13009306260574\n",
            "103.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "iOOk8aoZxB9g",
        "outputId": "0cd14dd1-d074-4ba5-d44e-dfe71e0f849e"
      },
      "source": [
        "features.describe()\n"
      ],
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>parameter_value</th>\n",
              "      <th>920000</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1182.000000</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>111.130093</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>284.712072</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>70.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>101.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>103.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>105.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>9890.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       parameter_value  920000\n",
              "count      1182.000000     0.0\n",
              "mean        111.130093     NaN\n",
              "std         284.712072     NaN\n",
              "min          70.000000     NaN\n",
              "25%         101.000000     NaN\n",
              "50%         103.000000     NaN\n",
              "75%         105.000000     NaN\n",
              "max        9890.000000     NaN"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jzAxxfpzJBsc"
      },
      "source": [
        ""
      ],
      "execution_count": 64,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UQF3xIzF3IuL",
        "outputId": "c7e0c7b6-a490-45c0-c0dd-0c3762ea0a8d"
      },
      "source": [
        "pd.value_counts(features['age_group'])"
      ],
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "adult    914\n",
              "old      245\n",
              "teen      13\n",
              "child     10\n",
              "Name: age_group, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lFVtkWpI4IdH",
        "outputId": "bf091e78-43aa-486f-e22a-e89c471d9d76"
      },
      "source": [
        "gender_list_new=features['age_group'].unique().tolist()\n",
        "print(gender_list_new)"
      ],
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "['adult', 'old', 'teen', 'child']\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HFvH80CW91rG",
        "outputId": "e5133283-4c5f-45a7-d3e1-c7c490460855"
      },
      "source": [
        "ans=[]\n",
        "for list in gender_list_new:\n",
        "  ans=features[features['age_group']==list]\n",
        "  print(ans)"
      ],
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "     standard_lab_parameter_name  parameter_value    unit age_group  920000\n",
            "0                       Chloride            105.3  mmol/l     adult     NaN\n",
            "1                       Chloride            107.0  mmol/l     adult     NaN\n",
            "3                       Chloride             98.0  mmol/l     adult     NaN\n",
            "5                       Chloride            104.3  mmol/l     adult     NaN\n",
            "6                       Chloride            104.0  mmol/l     adult     NaN\n",
            "...                          ...              ...     ...       ...     ...\n",
            "1177                    Chloride            100.0  mmol/l     adult     NaN\n",
            "1178                    Chloride            103.0  mmol/l     adult     NaN\n",
            "1179                    Chloride            102.0  mmol/l     adult     NaN\n",
            "1180                    Chloride            101.0  mmol/l     adult     NaN\n",
            "1181                    Chloride            103.8  mmol/l     adult     NaN\n",
            "\n",
            "[914 rows x 5 columns]\n",
            "     standard_lab_parameter_name  parameter_value    unit age_group  920000\n",
            "2                       Chloride            106.5  mmol/l       old     NaN\n",
            "4                       Chloride            101.9  mmol/l       old     NaN\n",
            "9                       Chloride            104.5  mmol/l       old     NaN\n",
            "19                      Chloride           9890.0  mmol/l       old     NaN\n",
            "20                      Chloride            100.0  mmol/l       old     NaN\n",
            "...                          ...              ...     ...       ...     ...\n",
            "1166                    Chloride            104.0   meq/l       old     NaN\n",
            "1167                    Chloride            100.0  mmol/l       old     NaN\n",
            "1169                    Chloride            102.7  mmol/l       old     NaN\n",
            "1170                    Chloride             98.8  mmol/l       old     NaN\n",
            "1176                    Chloride            104.9  mmol/l       old     NaN\n",
            "\n",
            "[245 rows x 5 columns]\n",
            "     standard_lab_parameter_name  parameter_value    unit age_group  920000\n",
            "25                      Chloride            104.0  mmol/l      teen     NaN\n",
            "190                     Chloride            103.4  mmol/l      teen     NaN\n",
            "245                     Chloride            104.1  mmol/l      teen     NaN\n",
            "344                     Chloride             95.0  mmol/l      teen     NaN\n",
            "345                     Chloride             95.0  mmol/l      teen     NaN\n",
            "346                     Chloride             95.0  mmol/l      teen     NaN\n",
            "347                     Chloride             95.0  mmol/l      teen     NaN\n",
            "590                     Chloride            104.0  mmol/l      teen     NaN\n",
            "817                     Chloride             99.0  mmol/l      teen     NaN\n",
            "922                     Chloride            104.0  mmol/l      teen     NaN\n",
            "956                     Chloride            106.0  mmol/l      teen     NaN\n",
            "1113                    Chloride            101.5  mmol/l      teen     NaN\n",
            "1175                    Chloride            104.0  mmol/l      teen     NaN\n",
            "     standard_lab_parameter_name  parameter_value    unit age_group  920000\n",
            "208                     Chloride            101.0  mmol/l     child     NaN\n",
            "374                     Chloride             98.0  mmol/l     child     NaN\n",
            "378                     Chloride            107.0  mmol/l     child     NaN\n",
            "447                     Chloride            105.0  mmol/l     child     NaN\n",
            "616                     Chloride            104.0  mmol/l     child     NaN\n",
            "641                     Chloride            104.0  mmol/l     child     NaN\n",
            "756                     Chloride            104.9  mmol/l     child     NaN\n",
            "835                     Chloride            100.0  mmol/l     child     NaN\n",
            "1075                    Chloride            101.0  mmol/l     child     NaN\n",
            "1086                    Chloride            101.0  mmol/l     child     NaN\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pLj58Aam_GZM"
      },
      "source": [
        ""
      ],
      "execution_count": 67,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2MxXwPfc43-f",
        "outputId": "0364ffa1-9efe-45d3-9f26-459b2a8e5127"
      },
      "source": [
        "features1=features[features['age_group']=='adult']\n",
        "features2=features[features['age_group']=='old']\n",
        "features3=features[features['age_group']=='teen']\n",
        "features4=features[features['age_group']=='child']\n",
        "print(features1)\n",
        "print(features2)\n",
        "print(features3)\n",
        "print(features4)"
      ],
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "     standard_lab_parameter_name  parameter_value    unit age_group  920000\n",
            "0                       Chloride            105.3  mmol/l     adult     NaN\n",
            "1                       Chloride            107.0  mmol/l     adult     NaN\n",
            "3                       Chloride             98.0  mmol/l     adult     NaN\n",
            "5                       Chloride            104.3  mmol/l     adult     NaN\n",
            "6                       Chloride            104.0  mmol/l     adult     NaN\n",
            "...                          ...              ...     ...       ...     ...\n",
            "1177                    Chloride            100.0  mmol/l     adult     NaN\n",
            "1178                    Chloride            103.0  mmol/l     adult     NaN\n",
            "1179                    Chloride            102.0  mmol/l     adult     NaN\n",
            "1180                    Chloride            101.0  mmol/l     adult     NaN\n",
            "1181                    Chloride            103.8  mmol/l     adult     NaN\n",
            "\n",
            "[914 rows x 5 columns]\n",
            "     standard_lab_parameter_name  parameter_value    unit age_group  920000\n",
            "2                       Chloride            106.5  mmol/l       old     NaN\n",
            "4                       Chloride            101.9  mmol/l       old     NaN\n",
            "9                       Chloride            104.5  mmol/l       old     NaN\n",
            "19                      Chloride           9890.0  mmol/l       old     NaN\n",
            "20                      Chloride            100.0  mmol/l       old     NaN\n",
            "...                          ...              ...     ...       ...     ...\n",
            "1166                    Chloride            104.0   meq/l       old     NaN\n",
            "1167                    Chloride            100.0  mmol/l       old     NaN\n",
            "1169                    Chloride            102.7  mmol/l       old     NaN\n",
            "1170                    Chloride             98.8  mmol/l       old     NaN\n",
            "1176                    Chloride            104.9  mmol/l       old     NaN\n",
            "\n",
            "[245 rows x 5 columns]\n",
            "     standard_lab_parameter_name  parameter_value    unit age_group  920000\n",
            "25                      Chloride            104.0  mmol/l      teen     NaN\n",
            "190                     Chloride            103.4  mmol/l      teen     NaN\n",
            "245                     Chloride            104.1  mmol/l      teen     NaN\n",
            "344                     Chloride             95.0  mmol/l      teen     NaN\n",
            "345                     Chloride             95.0  mmol/l      teen     NaN\n",
            "346                     Chloride             95.0  mmol/l      teen     NaN\n",
            "347                     Chloride             95.0  mmol/l      teen     NaN\n",
            "590                     Chloride            104.0  mmol/l      teen     NaN\n",
            "817                     Chloride             99.0  mmol/l      teen     NaN\n",
            "922                     Chloride            104.0  mmol/l      teen     NaN\n",
            "956                     Chloride            106.0  mmol/l      teen     NaN\n",
            "1113                    Chloride            101.5  mmol/l      teen     NaN\n",
            "1175                    Chloride            104.0  mmol/l      teen     NaN\n",
            "     standard_lab_parameter_name  parameter_value    unit age_group  920000\n",
            "208                     Chloride            101.0  mmol/l     child     NaN\n",
            "374                     Chloride             98.0  mmol/l     child     NaN\n",
            "378                     Chloride            107.0  mmol/l     child     NaN\n",
            "447                     Chloride            105.0  mmol/l     child     NaN\n",
            "616                     Chloride            104.0  mmol/l     child     NaN\n",
            "641                     Chloride            104.0  mmol/l     child     NaN\n",
            "756                     Chloride            104.9  mmol/l     child     NaN\n",
            "835                     Chloride            100.0  mmol/l     child     NaN\n",
            "1075                    Chloride            101.0  mmol/l     child     NaN\n",
            "1086                    Chloride            101.0  mmol/l     child     NaN\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 129
        },
        "id": "x_XdcUKo7rjX",
        "outputId": "311bc03a-3827-491e-a457-118b61580951"
      },
      "source": [
        "fig = plt.figure(figsize = (10, 5))\n",
        " \n",
        "# creating the bar plot\n",
        "plt.plot(, features.parameter_value, color ='maroon')\n",
        "plt.xlabel(\"age_group\")\n",
        "plt.ylabel(\"parameter_value\")\n",
        "plt.title(\"chloride comparision of test_data\")\n",
        "plt.show()"
      ],
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-69-55b02932d9bb>\"\u001b[0;36m, line \u001b[0;32m4\u001b[0m\n\u001b[0;31m    plt.plot(, features.parameter_value, color ='maroon')\u001b[0m\n\u001b[0m             ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mzI9KkcKb_7J"
      },
      "source": [
        "fig = plt.figure(figsize = (10, 5))\n",
        " \n",
        "# creating the bar plot\n",
        "plt.bar(features.age_group, features['parameter_value'], color ='maroon',\n",
        "        width = 0.5)\n",
        " \n",
        "plt.xlabel(\"age_group\")\n",
        "plt.ylabel(\"parameter_value\")\n",
        "plt.title(\"chloride comparision of train_data\")\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ib4_cTXJfF2J"
      },
      "source": [
        "fig = plt.figure(figsize = (10, 5))\n",
        " \n",
        "# creating the bar plot\n",
        "plt.bar(features_test.age_group, features_test.parameter_value, color ='maroon',\n",
        "        width = 0.4)\n",
        " \n",
        "plt.xlabel(\"age_group\")\n",
        "plt.ylabel(\"parameter_value\")\n",
        "plt.title(\"chloride comparision of test_data\")\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}